/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://v2.api.spacetraders.io\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ShipRequirements } from './shipRequirements';


/**
 * A module can be installed in a ship and provides a set of capabilities such as storage space or quarters for crew. Module installations are permanent.
 */
export interface ShipModule { 
    symbol: ShipModule.SymbolEnum;
    capacity?: number;
    range?: number;
    name: string;
    description?: string;
    requirements: ShipRequirements;
}
export namespace ShipModule {
    export type SymbolEnum = 'MODULE_MINERAL_PROCESSOR_I' | 'MODULE_CARGO_HOLD_I' | 'MODULE_CREW_QUARTERS_I' | 'MODULE_ENVOY_QUARTERS_I' | 'MODULE_PASSENGER_CABIN_I' | 'MODULE_MICRO_REFINERY_I' | 'MODULE_ORE_REFINERY_I' | 'MODULE_FUEL_REFINERY_I' | 'MODULE_SCIENCE_LAB_I' | 'MODULE_JUMP_DRIVE_I' | 'MODULE_JUMP_DRIVE_II' | 'MODULE_JUMP_DRIVE_III' | 'MODULE_WARP_DRIVE_I' | 'MODULE_WARP_DRIVE_II' | 'MODULE_WARP_DRIVE_III' | 'MODULE_SHIELD_GENERATOR_I' | 'MODULE_SHIELD_GENERATOR_II';
    export const SymbolEnum = {
        MineralProcessorI: 'MODULE_MINERAL_PROCESSOR_I' as SymbolEnum,
        CargoHoldI: 'MODULE_CARGO_HOLD_I' as SymbolEnum,
        CrewQuartersI: 'MODULE_CREW_QUARTERS_I' as SymbolEnum,
        EnvoyQuartersI: 'MODULE_ENVOY_QUARTERS_I' as SymbolEnum,
        PassengerCabinI: 'MODULE_PASSENGER_CABIN_I' as SymbolEnum,
        MicroRefineryI: 'MODULE_MICRO_REFINERY_I' as SymbolEnum,
        OreRefineryI: 'MODULE_ORE_REFINERY_I' as SymbolEnum,
        FuelRefineryI: 'MODULE_FUEL_REFINERY_I' as SymbolEnum,
        ScienceLabI: 'MODULE_SCIENCE_LAB_I' as SymbolEnum,
        JumpDriveI: 'MODULE_JUMP_DRIVE_I' as SymbolEnum,
        JumpDriveIi: 'MODULE_JUMP_DRIVE_II' as SymbolEnum,
        JumpDriveIii: 'MODULE_JUMP_DRIVE_III' as SymbolEnum,
        WarpDriveI: 'MODULE_WARP_DRIVE_I' as SymbolEnum,
        WarpDriveIi: 'MODULE_WARP_DRIVE_II' as SymbolEnum,
        WarpDriveIii: 'MODULE_WARP_DRIVE_III' as SymbolEnum,
        ShieldGeneratorI: 'MODULE_SHIELD_GENERATOR_I' as SymbolEnum,
        ShieldGeneratorIi: 'MODULE_SHIELD_GENERATOR_II' as SymbolEnum
    };
}


